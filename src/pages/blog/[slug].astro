---
import { getCollection, getEntryBySlug } from "astro:content";
import { Image } from "astro:assets";
import Layout from "@/layouts/Layout.astro";
import Container from "@/components/Container.astro";
import H1 from "@/components/H1.astro";
import CategoryList from "@/components/CategoryList.astro";
import PostList from "@/components/PostList.astro";
import PostMeta from "@/components/PostMeta.astro";
import Share from "@/components/Share.astro";
import TableOfContents from "@/components/TableOfContents.astro";

export const prerender = false;
export async function getStaticPaths() {
  const posts = await getCollection("posts");
  const paths = posts.map((post) => {
    return {
      params: {
        slug: post.slug,
      },
      props: {
        post,
      },
    };
  });
  return paths;
}

const { slug } = Astro.params;
const post = await getEntryBySlug("posts", slug as string);
if (!post) {
  return Astro.redirect("/404");
}
const author = await getEntryBySlug("authors", post.data.author);
if (!author) {
  return Astro.redirect("/404");
}

const posts = await getCollection("posts");
const remainingPosts = posts.filter((p) => p.slug !== post.slug);
const relatedPosts = remainingPosts.filter((p) =>
  p.data.categories.some((category) => post.data.categories.includes(category))
);
const { Content, headings } = await post.render();

// export async function getStaticPaths() {
//   const authors = await getCollection("authors");
//   const posts = await getCollection("posts");
//   const paths = authors.map((author) => {
//     const postsByAuthor = posts.filter(
//       (post) => post.data.author === author.slug
//     );
//     return {
//       params: {
//         slug: author.slug,
//       },
//       props: {
//         author,
//         posts: postsByAuthor,
//       },
//     };
//   });
//   return paths;
// }
---

<Layout title={post.data.title}>
  <Container>
    <H1 text={post.data.title} />
    <div class="text-zinc-500 text-2xl mb-16">
      ‚Üê <a href="/blog" class="underline">Back to all blogs</a>
    </div>

    <div class="mb-4">
      <CategoryList categories={post.data.categories} />
    </div>

    <PostMeta post={post} />

    <Image
      src={post.data.image}
      alt={post.data.title}
      width={1024}
      height={1024 / 1.5}
      format="webp"
      class="rounded-2xl shadow-xl mb-28 aspect-thumbnail object-cover"
    />
    <div class="mb-10">
      <TableOfContents headings={headings} />
    </div>
    <div class="relative">
      <Share post={post} />

      <div class="prose prose-2xl overflow-visible relative">
        <Content />
      </div>
    </div>
    <!-- <div class="my-10">
      <EmojiReactions client:visible post={post.slug} {reactionsDetails} />
    </div> -->

    <!-- <div
        class="bg-teal-100/30 py-14 px-24 relative border-b border-teal-900 mt-44"
    >
        <div class="max-w-7xl mx-auto">
            <div id="comments" class="">
                <span class="font-bold text-teal-900 text-4xl mr-12"
                    >Comments</span
                >

                <span
                    class="border border-teal-900 text-teal-900 rounded-full px-4 py-2 font-bold text-xl"
                >
                    {comments.length}
                </span>
            </div>
            <div class="mb-14">
                <CommentForm />
            </div>
            <CommentList comments={comments} />
        </div>
    </div> -->

    <div class="px-24 py-20 max-w-7xl mx-auto">
      <p class="font-bold text-teal-900 text-4xl mb-16">Related posts</p>
      <PostList posts={relatedPosts} />
    </div>
  </Container></Layout
>
